#!/usr/bin/env bash
# Colombo/deploy/setup.sh
# Install Podman + podman-compose and install/configure a DuckDNS DDNS updater + cron job.
# Usage (manual): sudo ./deploy/setup.sh -t TOKEN -d greendrive

set -euo pipefail # Exit on error, undefined variable, or pipe failure

usage() {
    cat <<EOF
Usage: sudo $0 -t DUCKDNS_TOKEN [-d DUCKDNS_DOMAIN]
  -t TOKEN    DuckDNS token (required)
  -d DOMAIN   DuckDNS domain (default: greendrive)
EOF
    exit 1
}

# parse args
DUCKDNS_TOKEN=""
DUCKDNS_DOMAIN="greendrive"
while getopts ":t:d:h" opt; do
  case $opt in
    t) DUCKDNS_TOKEN="$OPTARG" ;;
    d) DUCKDNS_DOMAIN="$OPTARG" ;;
    h|*) usage ;;
  esac
done

# Helpers
run_as_root() {
    if [ "$(id -u)" -ne 0 ]; then
        sudo "$@"
    else
        "$@"
    fi
}


install_packages() {
    pm="$1"
    case "$pm" in
        apt)
            run_as_root apt update
            run_as_root apt install -y podman podman-compose curl cron
            ;;
    esac
}

setup_folders() {
    mkdir -p srv/colombo/{releases,shared,config}
}

# Create ddns updater script and config
install_ddns() {
    ddns_bin="/usr/local/bin/ddns-duckdns.sh"
    # DUCKDNS_TOKEN and DUCKDNS_DOMAIN come dalla variabile giÃ  parseate nello script di setup

    cat > /tmp/ddns-duckdns.sh <<EOF
#!/usr/bin/env bash
# DuckDNS updater (generated by setup.sh)
set -euo pipefail

DUCKDNS_TOKEN='${DUCKDNS_TOKEN}'
DUCKDNS_DOMAIN='${DUCKDNS_DOMAIN}'

mkdir -p ~/duckdns
echo url="https://www.duckdns.org/update?domains=\${DUCKDNS_DOMAIN}&token=\${DUCKDNS_TOKEN}&ip=" | curl -k -o ~/duckdns/duck.log -K -
if grep -q "OK" ~/duckdns/duck.log; then
  echo "Updated DuckDNS for domain \${DUCKDNS_DOMAIN}"
else
  echo "Error updating DuckDNS"
fi

exit 0
EOF

    run_as_root mv /tmp/ddns-duckdns.sh "$ddns_bin"
    run_as_root chmod 755 "$ddns_bin"

    # Install cron job for root (every 5 minutes). Avoid duplicate entries.
    cron_line="*/5 * * * * ${ddns_bin} >/dev/null 2>&1"
    if run_as_root crontab -l 2>/dev/null | grep -Fxq "$cron_line"; then
        echo "Cron job already installed."
    else
        (run_as_root crontab -l 2>/dev/null || true; echo "$cron_line") | run_as_root crontab -
        echo "Installed cron job."
    fi

    # Run once now
    run_as_root "$ddns_bin" || true
    echo "DuckDNS updater installed at $ddns_bin and log at ~/duckdns/duck.log"

    # Checl if ~/duckdns/duck.log exists and contains "OK"
    if [ -f ~/duckdns/duck.log ] && grep -q "OK" ~/duckdns/duck.log; then
        echo "DuckDNS setup verified successfully."
    else
        echo "Warning: DuckDNS setup may have failed. Check ~/duckdns/duck.log for details."
    fi
}

main() {
    install_packages "apt"
    install_ddns
    echo "Podman and podman-compose installed (podman CLI: $(command -v podman))."
    echo "Setup complete."
}

main "$@"